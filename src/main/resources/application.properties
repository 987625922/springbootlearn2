#devtools热修复触发器设置
#spring.devtools.restart.trigger-file=trigger.txt
web.images-path=C:\\Users\\98762\\Desktop\
 
#spring加载的默认资源路径
spring.resources.static-locations=classpath:/META-INF/resources/,classpath:/resources/,classpath:/static/,classpath:/public/,classpath:/test/,file:${web.images-path}

#-------------------  springboot  -----------------------
#springboot提供的非常多的主键，并提供了对这些主键的设置
#修改spring的配置，把tomcat的端口改成8081
#server.port=8081

#-------------------  datasource  -----------------------
spring.datasource.url=jdbc:mysql://localhost:3306/springbootlearn?useUnicode=true&characterEncoding=utf-8&serverTimezone=GMT%2B8
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#配置数据源
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
#开启控制台打印sql
mybatis.configuration.log-impl=org.apache.ibatis.logging.stdout.StdOutImpl
#加载配置，注入到sqlSessionFactory等都是springBoot帮我们完成

#-------------------  redis（默认已经配置以下，不用配置，除非有特殊配置）  ----------------------
spring.redis.database=0
spring.redis.host=127.0.0.1
#spring.redis.host=192.168.85.132
spring.redis.port=6379
#连接超时时间 单位 ms （毫秒）
spring.redis.timeout=3000
#redis线程池设置
#连接池中最大空闲连接，默认值是8
spring.redis.jedis.pool.max-idle=200
#连接池中最小空闲连接,默认值是0
spring.redis.jedis.pool.min-idle=200

#-------------------  elasticsearch  -----------------------
#elasticsearch集群的名称
spring.data.elasticsearch.cluster-name=elasticsearch
#elasticsearch服务端的ip
#spring.data.elasticsearch.cluster-nodes=127.0.0.1:9300
spring.data.elasticsearch.cluster-nodes=192.168.85.132:9300
#elasticsearch数据仓库是否开启
spring.data.elasticsearch.repositories.enabled=true

#-------------------  ActiveMQ  -----------------------
#整合jms测试，安装在别的机器，防火墙和端口号记得开放
spring.activemq.broker-url=tcp://192.168.85.132:61616
#集群配置
#spring.activemq.broker-url=failover:(tcp://localhost:61616,tcp://localhost:61617)
spring.activemq.user=admin
spring.activemq.password=admin
#下列配置要增加依赖
spring.activemq.pool.enabled=true
spring.activemq.pool.max-connections=100
#开启发布模型支持，默认只支持点对点的消息消费，消息发布支持，一个发布者，多个消费者，默认为false
#有个局限就是只能支持一种，想2种模式都支持需要在springApplication中设置，如jmsListenerContainerTopic方法
#spring.jms.pub-sub-domain=true

#-------------------  thymeleaf  -----------------------
#整合thymeleaf相关凭证
#开发时关闭缓存，不然没办法看到实时页面
spring.thymeleaf.cache=false
spring.thymeleaf.mode=HTML5
#前缀
spring.thymeleaf.prefix=classpath:/templates/
#编码
spring.thymeleaf.encoding=UTF-8
#类型
spring.thymeleaf.servlet.content-type=text/html
#名字后缀
spring.thymeleaf.suffix=.html